(function() {var implementors = {};
implementors["az"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"az/struct.Round.html\" title=\"struct az::Round\">Round</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["az::Round"]}];
implementors["bytemuck"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"bytemuck/checked/enum.CheckedCastError.html\" title=\"enum bytemuck::checked::CheckedCastError\">CheckedCastError</a>","synthetic":true,"types":["bytemuck::checked::CheckedCastError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"bytemuck/enum.PodCastError.html\" title=\"enum bytemuck::PodCastError\">PodCastError</a>","synthetic":true,"types":["bytemuck::PodCastError"]}];
implementors["fixed"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"fixed/struct.F128.html\" title=\"struct fixed::F128\">F128</a>","synthetic":true,"types":["fixed::f128::F128"]},{"text":"impl Freeze for <a class=\"struct\" href=\"fixed/struct.ParseFixedError.html\" title=\"struct fixed::ParseFixedError\">ParseFixedError</a>","synthetic":true,"types":["fixed::from_str::ParseFixedError"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"fixed/struct.Unwrapped.html\" title=\"struct fixed::Unwrapped\">Unwrapped</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["fixed::unwrapped::Unwrapped"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"fixed/struct.Wrapping.html\" title=\"struct fixed::Wrapping\">Wrapping</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["fixed::wrapping::Wrapping"]},{"text":"impl&lt;Frac&gt; Freeze for <a class=\"struct\" href=\"fixed/struct.FixedU8.html\" title=\"struct fixed::FixedU8\">FixedU8</a>&lt;Frac&gt;","synthetic":true,"types":["fixed::FixedU8"]},{"text":"impl&lt;Frac&gt; Freeze for <a class=\"struct\" href=\"fixed/struct.FixedU16.html\" title=\"struct fixed::FixedU16\">FixedU16</a>&lt;Frac&gt;","synthetic":true,"types":["fixed::FixedU16"]},{"text":"impl&lt;Frac&gt; Freeze for <a class=\"struct\" href=\"fixed/struct.FixedU32.html\" title=\"struct fixed::FixedU32\">FixedU32</a>&lt;Frac&gt;","synthetic":true,"types":["fixed::FixedU32"]},{"text":"impl&lt;Frac&gt; Freeze for <a class=\"struct\" href=\"fixed/struct.FixedU64.html\" title=\"struct fixed::FixedU64\">FixedU64</a>&lt;Frac&gt;","synthetic":true,"types":["fixed::FixedU64"]},{"text":"impl&lt;Frac&gt; Freeze for <a class=\"struct\" href=\"fixed/struct.FixedU128.html\" title=\"struct fixed::FixedU128\">FixedU128</a>&lt;Frac&gt;","synthetic":true,"types":["fixed::FixedU128"]},{"text":"impl&lt;Frac&gt; Freeze for <a class=\"struct\" href=\"fixed/struct.FixedI8.html\" title=\"struct fixed::FixedI8\">FixedI8</a>&lt;Frac&gt;","synthetic":true,"types":["fixed::FixedI8"]},{"text":"impl&lt;Frac&gt; Freeze for <a class=\"struct\" href=\"fixed/struct.FixedI16.html\" title=\"struct fixed::FixedI16\">FixedI16</a>&lt;Frac&gt;","synthetic":true,"types":["fixed::FixedI16"]},{"text":"impl&lt;Frac&gt; Freeze for <a class=\"struct\" href=\"fixed/struct.FixedI32.html\" title=\"struct fixed::FixedI32\">FixedI32</a>&lt;Frac&gt;","synthetic":true,"types":["fixed::FixedI32"]},{"text":"impl&lt;Frac&gt; Freeze for <a class=\"struct\" href=\"fixed/struct.FixedI64.html\" title=\"struct fixed::FixedI64\">FixedI64</a>&lt;Frac&gt;","synthetic":true,"types":["fixed::FixedI64"]},{"text":"impl&lt;Frac&gt; Freeze for <a class=\"struct\" href=\"fixed/struct.FixedI128.html\" title=\"struct fixed::FixedI128\">FixedI128</a>&lt;Frac&gt;","synthetic":true,"types":["fixed::FixedI128"]},{"text":"impl Freeze for <a class=\"struct\" href=\"fixed/struct.F128Bits.html\" title=\"struct fixed::F128Bits\">F128Bits</a>","synthetic":true,"types":["fixed::F128Bits"]}];
implementors["half"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"half/struct.bf16.html\" title=\"struct half::bf16\">bf16</a>","synthetic":true,"types":["half::bfloat::bf16"]},{"text":"impl Freeze for <a class=\"struct\" href=\"half/struct.f16.html\" title=\"struct half::f16\">f16</a>","synthetic":true,"types":["half::binary16::f16"]}];
implementors["num_traits"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"num_traits/enum.FloatErrorKind.html\" title=\"enum num_traits::FloatErrorKind\">FloatErrorKind</a>","synthetic":true,"types":["num_traits::FloatErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"num_traits/struct.ParseFloatError.html\" title=\"struct num_traits::ParseFloatError\">ParseFloatError</a>","synthetic":true,"types":["num_traits::ParseFloatError"]}];
implementors["skala_engine_numerics"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"skala_engine_numerics/vector/struct.Vec2.html\" title=\"struct skala_engine_numerics::vector::Vec2\">Vec2</a>","synthetic":true,"types":["skala_engine_numerics::vector::vector2::Vec2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"skala_engine_numerics/vector/struct.Vec3.html\" title=\"struct skala_engine_numerics::vector::Vec3\">Vec3</a>","synthetic":true,"types":["skala_engine_numerics::vector::vector3::Vec3"]}];
implementors["typenum"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>","synthetic":true,"types":["typenum::bit::B0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>","synthetic":true,"types":["typenum::bit::B1"]},{"text":"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"typenum/int/struct.PInt.html\" title=\"struct typenum::int::PInt\">PInt</a>&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::int::PInt"]},{"text":"impl&lt;U&gt; Freeze for <a class=\"struct\" href=\"typenum/int/struct.NInt.html\" title=\"struct typenum::int::NInt\">NInt</a>&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::int::NInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/int/struct.Z0.html\" title=\"struct typenum::int::Z0\">Z0</a>","synthetic":true,"types":["typenum::int::Z0"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>","synthetic":true,"types":["typenum::uint::UTerm"]},{"text":"impl&lt;U, B&gt; Freeze for <a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;U, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::uint::UInt"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/array/struct.ATerm.html\" title=\"struct typenum::array::ATerm\">ATerm</a>","synthetic":true,"types":["typenum::array::ATerm"]},{"text":"impl&lt;V, A&gt; Freeze for <a class=\"struct\" href=\"typenum/array/struct.TArr.html\" title=\"struct typenum::array::TArr\">TArr</a>&lt;V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["typenum::array::TArr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Greater.html\" title=\"struct typenum::Greater\">Greater</a>","synthetic":true,"types":["typenum::Greater"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Less.html\" title=\"struct typenum::Less\">Less</a>","synthetic":true,"types":["typenum::Less"]},{"text":"impl Freeze for <a class=\"struct\" href=\"typenum/struct.Equal.html\" title=\"struct typenum::Equal\">Equal</a>","synthetic":true,"types":["typenum::Equal"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()